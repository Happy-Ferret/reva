syntax = "proto3";


package api;

service Auth {
  rpc CreateToken(CreateTokenReq) returns (Token) {}
  rpc VerifyToken(VerifyTokenReq) returns (Empty) {}
}


service Storage {
  rpc CreateDir(PathReq) returns (Empty) {}
  rpc Delete(PathReq) returns (Empty) {}
  rpc Move(MoveReq) returns (Empty) {}
  rpc Inspect(PathReq) returns (Metadata) {}
  rpc ListFolder(PathReq) returns (stream Metadata) {}
  rpc StartWriteTx(Empty) returns (TxInfo) {}
  rpc WriteChunk(stream TxChunk) returns (WriteSummary) {}
  rpc FinishWriteTx(TxEnd) returns (Empty) {}
  rpc ReadFile(PathReq) returns (stream DataChunk) {}
  rpc ListRevisions(PathReq) returns (stream Revision) {}
  rpc ReadRevision(RevisionReq) returns (stream DataChunk) {}
  rpc RestoreRevision(RevisionReq) returns (Empty) {}
  rpc ListRecycle(PathReq) returns (stream RecycleEntry) {}
  rpc RestoreRecycleEntry(RecycleEntryReq) returns (Empty) {}
  rpc EmptyRecycle(PathReq) returns (Empty) {}
}

service Share {
  rpc CreatePublicLink(NewLinkReq) returns (PublicLink) {}
  rpc UpdatePublicLink(UpdateLinkReq) returns  (PublicLink) {}
  rpc InspectPublicLink(TokenReq) returns (PublicLink) {}
  rpc RevokePublicLink(TokenReq) returns  (Empty) {}
  rpc ListPublicLinks(Empty) returns (stream PublicLink) {}

  rpc AddFolderShare(NewFolderShareReq) returns (FolderShare) {}
  rpc UpdateFolderShare(UpdateFolderShareReq) returns (Empty) {}
  rpc ListFolderShares(ListFolderSharesReq) returns (stream FolderShare) {}
  rpc UnshareFolder(UnshareFolderReq) returns (Empty) {}

  rpc ListReceivedShares(Empty) returns (stream ReceivedShare) {}
  rpc MountReceivedShare(ReceivedShareReq) returns (Empty) {}
  rpc UnmountReceivedShare(ReceivedShareReq) returns (Empty) {} 
}

service Preview {
  rpc ReadPreview(PathReq) returns (stream DataChunk) {}
}


message Empty {}

message TxInfo {
  string tx_id = 1;
}

message CreateTokenReq {
  string client_id = 1;
  string client_secret = 2;
}

message Token {
  string token = 1;
}

message  VerifyTokenReq {
  string token = 1;
}

message Metadata {
  string id = 1;
  string path = 2;
  uint64 size = 3;
  uint64 mtime = 4;
  bool is_dir = 5;
  string etag = 6;
  string checksum = 7;
  string deref_path = 8;
}

message PathReq {
  string path = 1;
}

message MoveReq {
  string old_path = 1;
  string new_path = 2;
}

// maybe add checksum data ?
message TxChunk {
  string tx_id = 1;
  uint64 length = 2;
  uint64 offset = 3;
  bytes data = 4;  
}

message WriteSummary {
	uint64 nchunks = 1;
	uint64 total_size = 2;
}

message TxEnd {
  string tx_id = 1;
  string path = 2;
  string checksum = 3;
}


message DataChunk {
  uint64 length = 1;
  uint64 offset = 2;
  bytes data = 3;  
}

message Revision {
  string rev_key = 1;
  uint64 size = 2;
  uint64 mtime = 3;
  bool is_dir = 4;
}

message RevisionReq {
  string path = 1;
  string rev_key = 2;
}

message RecycleEntry {
  string restore_path = 1;
  string restore_key = 2;
  uint64 size = 3;
  uint64 del_mtime = 4;
  bool is_dir = 5;
}

message RecycleEntryReq {
  string restore_key = 1;
}

message LinkPermissions {
  bool read = 1;
  bool write = 2;
}

message NewLinkReq {
  string path = 1;
  bool read_only = 2;
  string password = 3;
  uint64 expires = 4;
}

message UpdateLinkReq {
  string token = 1;
  bool update_password = 2;
  string password = 3;
  bool update_expiration = 4;
  uint64 expiration = 5;
  bool read_only = 6;
  bool update_read_only = 7;
}

message PublicLink {
  string token = 1;
  string path = 2;
  bool protected = 3;
  uint64 expires = 5;
  bool read_only = 6;
  uint64 mtime = 8;
}

message TokenReq {
  string token = 1;

}

message FolderShare {
  string id = 1;
  string path = 2;
  string owner_id = 3;
  string recipient_id = 4;
  bool read_only = 5;
  uint64 ctime = 7;
  uint64 mtime = 8;
}

message ReceivedShare {
  string id = 1;
  string path = 2;
  string owner_id = 3;
  string recipient_id = 4;
  bool read_only = 5;
  bool mounted = 6;
  string mount_name = 7;
  uint64 ctime = 8;
  uint64 mtime = 9;
}

message NewFolderShareReq {
  string path = 1;  
  string recipient = 2;
  bool read_only = 3;
}

message UpdateFolderShareReq {
  string id = 1;
  bool read_only = 2;
}

message UnshareFolderReq {
  string id = 1;
}

message ListFolderSharesReq {
  string path = 1;
}

message ReceivedShareReq {
  string share_id = 1;
}

